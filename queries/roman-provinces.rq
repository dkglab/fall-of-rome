PREFIX xyz: <http://sparql.xyz/facade-x/data/>
PREFIX fx: <http://sparql.xyz/facade-x/ns/>
PREFIX for: <https://dkglab.github.io/ns/for/>
PREFIX geo: <http://www.opengis.net/ont/geosparql#>
PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX pno: <http://linked.data.gov.au/def/placenames/>
PREFIX dcterms: <http://purl.org/dc/terms/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>

CONSTRUCT {
  ?Provincia a pno:Place, geo:Feature ;
      pno:hasPlaceName ?provincia_place_name_for_uri ;
      dcterms:identifier ?provincia_for_uri ;
      dcterms:identifier ?provincia_wiki_uri ;
      dcterms:identifier ?provincia_pleiades_uri ;  
      geo:hasGeometry ?geometry .
  ?geometry geo:asGeoJSON ?geoJSON .
}
WHERE {
  SERVICE <x-sparql-anything:> {
    fx:properties fx:csv.headers "true" .

    ?row xyz:provincia_wiki_name ?provincia_wiki_name ;
         xyz:provincia_wiki_uri ?provincia_wiki_uri ;
         xyz:provincia_pleiades_uri ?provincia_pleiades_uri ;
         xyz:provincia_alter_name ?provincia_alter_name .

    BIND(REPLACE(?provincia_wiki_name, " ", "-") AS ?id)
    # Mint new Place URIs using the fx:entity function
    BIND(fx:entity(for:, "place/", ?id) AS ?Provincia)
    # Mint new Place name URIs using the fx:entity function 
    BIND(fx:entity(for:, "place-name/", ?id) AS ?provincia_place_name_for_uri)  
  }

  # SERVICE <x-sparql-anything:location=data/roman-provinces/Spain-Late-Antique-Provinces.geojson> {
  #   fx:properties fx:media-type "application/json" .
  #   ?feature xyz:properties/xyz:Name ?provinceName ;
  #            xyz:geometry ?geometryObj .
  #   ?geometryObj xyz:type ?type ;            
  #            xyz:coordinates ?polygonArray .
  # # Key points about the MultiPolygon structure:a MultiPolygon holds multiple individual polygon geometries. 
  # # Rings within a Polygon:Each polygon is made up of one or more rings, 
  # # where the first ring is considered the exterior ring and subsequent rings are interior holes. 
  # # Points in a Ring:
  # # Each ring is a sequence of points, which are ordered and connect to form a closed loop. 
  # # Coordinate Pairs:
  # # Each point is represented by a pair of coordinates (X, Y) specifying its position on a coordinate plane. 
         
  #   ?polygonArray fx:anySlot ?ringarray .
  #   ?ringArray fx:anySlot ?pointArray .
  #   ?pointArray fx:anySlot ?coords .
  #   ?coords rdf:_1 ?lat ;
  #           rdf:_2 ?lon .
  
  # BIND(STR(?type) AS ?typeStr) 
  # BIND(CONCAT("[", STR(?lat), ", ", STR(?lon), "]") AS ?coordinatesStr)
  # BIND(CONCAT('{"type":"', ?typeStr, '","coordinates":', ?coordinatesStr,'}') AS ?geoJSONString)  
  # BIND(STRDT(?geoJSONString, geo:geoJSONLiteral) AS ?geoJSON)
# Bind the geometry object and province name to corresponding variables
#   BIND(?geometryObj AS ?geometry)
#   BIND(?provinceName AS ?provincia_alter_name)     
#   }
}
